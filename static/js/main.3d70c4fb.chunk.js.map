{"version":3,"sources":["Bugle_Tune.mp3","components/header/Header.js","components/timer/Timer.js","components/information/Information.js","components/app/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","AppBar","style","background","position","Toolbar","Grid","justify","container","spacing","item","Typography","variant","fontSize","Tooltip","title","IconButton","href","color","Timer","props","className","direction","xs","md","placement","Button","disabled","clicked","onClick","func","increase","size","decrease","time","enterDelay","enterNextDelay","handleClick","startIcon","labelText","handleReset","Information","Container","Paper","elevation","component","Link","underline","isStarted","isPaused","onBreak","timeRemaining","timerID","audio","Audio","sound","App","useState","Date","toISOString","substr","timer","setTimer","startText","setStartText","setClicked","f","updateTimer","clearInterval","play","handleComplete","setInterval","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3d70c4fb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Bugle_Tune.a514170e.mp3\";","import React from 'react';\r\nimport './Header.css';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nfunction Header() {\r\n    return (\r\n        <AppBar style={{ background: '#1b262c' }} position=\"static\">\r\n            <Toolbar>\r\n                <Grid justify=\"space-between\"\r\n                    container\r\n                    spacing={5}\r\n                >\r\n                    <Grid item>\r\n                        <Typography variant=\"h4\">\r\n                            PomoSession <DoneAllIcon fontSize=\"large\" />\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                        <Tooltip title=\"Check out my github.\">\r\n                            <IconButton href=\"https://github.com/donovanolivarez\" color=\"inherit\">\r\n                                <GitHubIcon fontSize=\"large\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"See my LinkedIn page.\">\r\n                            <IconButton href=\"https://www.linkedin.com/in/donovan-olivarez-571108191/\" color=\"inherit\">\r\n                                <LinkedInIcon fontSize=\"large\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport './Timer.css';\r\n\r\nfunction Timer(props) {\r\n\r\n    var iconControl = false;\r\n    return (\r\n        <div className=\"timer-main\">\r\n            <Grid container direction=\"row\" spacing={4} className=\"timer-adjust\">\r\n                <Grid item xs={12} md={4} >\r\n                    <div className=\"btn-adjust\">\r\n                        <Tooltip title=\"add 5 minutes\" placement=\"right\">\r\n                            <Button disabled={props.clicked} variant=\"contained\" onClick={props.func.increase} size=\"large\">\r\n                                <AddIcon />\r\n                            </Button>\r\n                        </Tooltip>\r\n                    </div>\r\n                    <div className=\"btn-adjust\">\r\n                        <Tooltip title=\"remove 5 minutes\" placement=\"right\">\r\n                            <Button disabled={props.clicked} variant=\"contained\" onClick={props.func.decrease} size=\"large\">\r\n                                <RemoveIcon />\r\n                            </Button>\r\n                        </Tooltip>\r\n                    </div>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={4}>\r\n                    <h1 className=\"timer-actual\">{props.time}</h1>\r\n                    <div className=\"btn\">\r\n                        <Tooltip title=\"Start, pause, or resume time.\" enterDelay={600} enterNextDelay={600}>\r\n                            <Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={props.handleClick} startIcon={props.clicked ? <PauseIcon/> : <PlayArrowIcon/>}>{props.labelText}</Button>\r\n                        </Tooltip>\r\n                    </div>\r\n                    <div className=\"btn\">\r\n                        <Tooltip title=\"Reset back to 25 minutes.\" enterDelay={600} enterNextDelay={600}>\r\n                            <Button color=\"secondary\" size=\"large\" variant=\"contained\" onClick={props.handleReset} startIcon={<RotateLeftIcon/>}>Reset</Button>\r\n                        </Tooltip>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Timer;","import React from 'react';\r\nimport './Information.css';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nfunction Information() {\r\n    return (\r\n        <div className=\"info-main\">\r\n            <Container>\r\n                <Paper elevation={4}>\r\n                    <Typography component={'span'} variant=\"h4\">How to Use the Pomodoro Technique</Typography>\r\n                    <Typography component={'span'} variant=\"body1\">\r\n                        <p> - Simply start the timer, and focus on the task at hand. Do not allow distractions to break your focus.</p>\r\n                        <p> - When the timer hits zero, you are allowed a 5 minute break. The breaks are important to making the most of the technique!</p>\r\n                        <p> - After 4 cycles, take a longer 15 - 20 minute break.</p>\r\n                    </Typography>\r\n\r\n                    <hr />\r\n                    <Typography component={'span'} variant=\"h4\">Links on Focus and Productivity</Typography>\r\n                    <Typography component={'span'} variant=\"body1\">\r\n                        <p>\r\n                            <Link underline=\"hover\" href=\"https://youtu.be/3E7hkPZ-HTk\">Quit Social Media Talk</Link>\r\n                        </p>\r\n                    </Typography>\r\n                </Paper>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\nexport default Information;","import React, { useState } from 'react';\nimport './App.css';\nimport Header from '../header/Header';\nimport Timer from '../timer/Timer';\nimport Information from '../information/Information';\nimport sound from '../../Bugle_Tune.mp3'\n\nvar isStarted = false;\nvar isPaused = false;\nvar onBreak = false;\nvar timeRemaining = 1500;\nvar timerID = 0;\nvar audio = new Audio(sound);\n\nfunction App() {\n\n  const [timer, setTimer] = useState(new Date(1000 * timeRemaining).toISOString().substr(11, 8));\n  const [startText, setStartText] = useState(\"Start\");\n  const [clicked, setClicked] = useState(false);\n\n  //TODO: object to reduce the props being passed to timer \n\n  const f = {\n    increase: increaseTime,\n    decrease: decreaseTime,\n  }\n\n  function updateTimer() {\n\n    if (isPaused) { return; }\n    if (timeRemaining === 0) { return handleComplete() };\n\n    timeRemaining--;\n    setTimer(new Date(1000 * timeRemaining).toISOString().substr(11, 8));\n  }\n\n  function startTimer() {\n    setClicked(true);\n    isStarted = true;\n    timerID = setInterval(updateTimer, 1000);\n    setStartText(\"Pause\");\n  }\n\n  function resumeTimer() {\n    setClicked(true);\n    isPaused = false;\n    setStartText(\"Pause\");\n  }\n\n  function pauseTimer() {\n    setClicked(false);\n    setStartText(\"Resume\");\n    isPaused = true;\n  }\n\n  function handleComplete() {\n    timeRemaining = onBreak ? 1500 : 300\n    if (timeRemaining === 1500 ){\n      onBreak = false;\n    } else {\n      onBreak = true;\n    }\n    isStarted = false;\n    isPaused = false;\n    setStartText(\"Start\");\n    setClicked(false);\n    clearInterval(timerID);\n    // TODO:  handleAudio() here!\n    audio.play();\n    setTimer(new Date(1000 * timeRemaining).toISOString().substr(11, 8));\n  }\n\n  function handleClick() {\n    if (!isStarted) {\n      startTimer();\n    } else if (isStarted && isPaused) {\n      resumeTimer();\n    } else {\n      pauseTimer();\n    }\n  }\n\n  function handleResetClick() {\n    timeRemaining = 1500;\n    isStarted = false;\n    isPaused = false;\n    onBreak = false;\n    clearInterval(timerID);\n    setStartText(\"Start\");\n    setClicked(false);\n    setTimer(new Date(1000 * timeRemaining).toISOString().substr(11, 8));\n  }\n\n  function increaseTime() {\n    timeRemaining += 300;\n    setTimer(new Date(1000 * timeRemaining).toISOString().substr(11, 8));\n  }\n\n  function decreaseTime(){\n    timeRemaining = (timeRemaining - 300 <= 0) ? 0 : timeRemaining - 300;\n    setTimer(new Date(1000 * timeRemaining).toISOString().substr(11, 8));\n  }\n\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Timer time={timer} labelText={startText} handleClick={handleClick} handleReset={handleResetClick} func={f} clicked={clicked}/>\n      <Information />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}